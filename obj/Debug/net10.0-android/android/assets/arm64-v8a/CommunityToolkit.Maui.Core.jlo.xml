<api>
  <jcw-types>
    <type name="OfflineSpeechToTextImplementation_SpeechRecognitionListener" package="crc64d6358e7bf64fbac4" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="CommunityToolkit.Maui.Media.OfflineSpeechToTextImplementation+SpeechRecognitionListener, CommunityToolkit.Maui.Core">
      <implemented_interfaces>
        <interface name="android.speech.RecognitionListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="OfflineSpeechToTextImplementation_SpeechRecognitionListener" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onBeginningOfSpeech" method="n_onBeginningOfSpeech:()V:GetOnBeginningOfSpeechHandler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="()V" retval="void" is_dynamically_registered="True" />
        <method name="onBufferReceived" method="n_onBufferReceived:([B)V:GetOnBufferReceived_arrayBHandler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="([B)V" params="byte[] p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onEndOfSpeech" method="n_onEndOfSpeech:()V:GetOnEndOfSpeechHandler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="()V" retval="void" is_dynamically_registered="True" />
        <method name="onError" method="n_onError:(I)V:GetOnError_IHandler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(I)V" params="int p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onEvent" method="n_onEvent:(ILandroid/os/Bundle;)V:GetOnEvent_ILandroid_os_Bundle_Handler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(ILandroid/os/Bundle;)V" params="int p0, android.os.Bundle p1" retval="void" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
        <method name="onPartialResults" method="n_onPartialResults:(Landroid/os/Bundle;)V:GetOnPartialResults_Landroid_os_Bundle_Handler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(Landroid/os/Bundle;)V" params="android.os.Bundle p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onReadyForSpeech" method="n_onReadyForSpeech:(Landroid/os/Bundle;)V:GetOnReadyForSpeech_Landroid_os_Bundle_Handler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(Landroid/os/Bundle;)V" params="android.os.Bundle p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onResults" method="n_onResults:(Landroid/os/Bundle;)V:GetOnResults_Landroid_os_Bundle_Handler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(Landroid/os/Bundle;)V" params="android.os.Bundle p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onRmsChanged" method="n_onRmsChanged:(F)V:GetOnRmsChanged_FHandler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(F)V" params="float p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onEndOfSegmentedSession" method="n_onEndOfSegmentedSession:()V:GetOnEndOfSegmentedSessionHandler:Android.Speech.IRecognitionListener, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="()V" retval="void" is_dynamically_registered="True" />
        <method name="onLanguageDetection" method="n_onLanguageDetection:(Landroid/os/Bundle;)V:GetOnLanguageDetection_Landroid_os_Bundle_Handler:Android.Speech.IRecognitionListener, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(Landroid/os/Bundle;)V" params="android.os.Bundle p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onSegmentResults" method="n_onSegmentResults:(Landroid/os/Bundle;)V:GetOnSegmentResults_Landroid_os_Bundle_Handler:Android.Speech.IRecognitionListener, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(Landroid/os/Bundle;)V" params="android.os.Bundle p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </methods>
    </type>
    <type name="RecognitionSupportCallback" package="crc64d6358e7bf64fbac4" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="CommunityToolkit.Maui.Media.RecognitionSupportCallback, CommunityToolkit.Maui.Core">
      <implemented_interfaces>
        <interface name="android.speech.RecognitionSupportCallback" />
      </implemented_interfaces>
      <constructors>
        <constructor name="RecognitionSupportCallback" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onError" method="n_onError:(I)V:GetOnError_IHandler:Android.Speech.IRecognitionSupportCallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(I)V" params="int p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onSupportResult" method="n_onSupportResult:(Landroid/speech/RecognitionSupport;)V:GetOnSupportResult_Landroid_speech_RecognitionSupport_Handler:Android.Speech.IRecognitionSupportCallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(Landroid/speech/RecognitionSupport;)V" params="android.speech.RecognitionSupport p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </methods>
    </type>
    <type name="Executor" package="crc64d6358e7bf64fbac4" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="CommunityToolkit.Maui.Media.Executor, CommunityToolkit.Maui.Core">
      <implemented_interfaces>
        <interface name="java.util.concurrent.Executor" />
      </implemented_interfaces>
      <constructors>
        <constructor name="Executor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="execute" method="n_execute:(Ljava/lang/Runnable;)V:GetExecute_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.IExecutorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(Ljava/lang/Runnable;)V" params="java.lang.Runnable p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </methods>
    </type>
    <type name="ModelDownloadListener" package="crc64d6358e7bf64fbac4" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="CommunityToolkit.Maui.Media.ModelDownloadListener, CommunityToolkit.Maui.Core">
      <implemented_interfaces>
        <interface name="android.speech.ModelDownloadListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="ModelDownloadListener" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onError" method="n_onError:(I)V:GetOnError_IHandler:Android.Speech.IModelDownloadListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(I)V" params="int p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onProgress" method="n_onProgress:(I)V:GetOnProgress_IHandler:Android.Speech.IModelDownloadListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(I)V" params="int p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onScheduled" method="n_onScheduled:()V:GetOnScheduledHandler:Android.Speech.IModelDownloadListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="()V" retval="void" is_dynamically_registered="True" />
        <method name="onSuccess" method="n_onSuccess:()V:GetOnSuccessHandler:Android.Speech.IModelDownloadListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="()V" retval="void" is_dynamically_registered="True" />
      </methods>
    </type>
    <type name="SpeechToTextImplementation_SpeechRecognitionListener" package="crc64d6358e7bf64fbac4" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="CommunityToolkit.Maui.Media.SpeechToTextImplementation+SpeechRecognitionListener, CommunityToolkit.Maui.Core">
      <implemented_interfaces>
        <interface name="android.speech.RecognitionListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="SpeechToTextImplementation_SpeechRecognitionListener" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onBeginningOfSpeech" method="n_onBeginningOfSpeech:()V:GetOnBeginningOfSpeechHandler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="()V" retval="void" is_dynamically_registered="True" />
        <method name="onBufferReceived" method="n_onBufferReceived:([B)V:GetOnBufferReceived_arrayBHandler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="([B)V" params="byte[] p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onEndOfSpeech" method="n_onEndOfSpeech:()V:GetOnEndOfSpeechHandler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="()V" retval="void" is_dynamically_registered="True" />
        <method name="onError" method="n_onError:(I)V:GetOnError_IHandler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(I)V" params="int p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onEvent" method="n_onEvent:(ILandroid/os/Bundle;)V:GetOnEvent_ILandroid_os_Bundle_Handler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(ILandroid/os/Bundle;)V" params="int p0, android.os.Bundle p1" retval="void" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
        <method name="onPartialResults" method="n_onPartialResults:(Landroid/os/Bundle;)V:GetOnPartialResults_Landroid_os_Bundle_Handler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(Landroid/os/Bundle;)V" params="android.os.Bundle p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onReadyForSpeech" method="n_onReadyForSpeech:(Landroid/os/Bundle;)V:GetOnReadyForSpeech_Landroid_os_Bundle_Handler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(Landroid/os/Bundle;)V" params="android.os.Bundle p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onResults" method="n_onResults:(Landroid/os/Bundle;)V:GetOnResults_Landroid_os_Bundle_Handler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(Landroid/os/Bundle;)V" params="android.os.Bundle p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onRmsChanged" method="n_onRmsChanged:(F)V:GetOnRmsChanged_FHandler:Android.Speech.IRecognitionListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(F)V" params="float p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onEndOfSegmentedSession" method="n_onEndOfSegmentedSession:()V:GetOnEndOfSegmentedSessionHandler:Android.Speech.IRecognitionListener, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="()V" retval="void" is_dynamically_registered="True" />
        <method name="onLanguageDetection" method="n_onLanguageDetection:(Landroid/os/Bundle;)V:GetOnLanguageDetection_Landroid_os_Bundle_Handler:Android.Speech.IRecognitionListener, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(Landroid/os/Bundle;)V" params="android.os.Bundle p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onSegmentResults" method="n_onSegmentResults:(Landroid/os/Bundle;)V:GetOnSegmentResults_Landroid_os_Bundle_Handler:Android.Speech.IRecognitionListener, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(Landroid/os/Bundle;)V" params="android.os.Bundle p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </methods>
    </type>
    <type name="MauiDrawingView" package="crc64159f3caeb1269279" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="crc6452ffdc5b34af3a0f.PlatformTouchGraphicsView" partial_assembly_qualified_name="CommunityToolkit.Maui.Core.Views.MauiDrawingView, CommunityToolkit.Maui.Core">
      <constructors>
        <constructor name="MauiDrawingView" method="n_.ctor:(Landroid/content/Context;Landroid/util/AttributeSet;II)V:" jni_signature="(Landroid/content/Context;Landroid/util/AttributeSet;II)V" managed_parameters="Android.Content.Context, Mono.Android:Android.Util.IAttributeSet, Mono.Android:System.Int32, System.Private.CoreLib:System.Int32, System.Private.CoreLib" params="android.content.Context p0, android.util.AttributeSet p1, int p2, int p3" retval="void" is_dynamically_registered="True" super_call="p0, p1, p2, p3" activate_call="p0, p1, p2, p3" />
        <constructor name="MauiDrawingView" method="n_.ctor:(Landroid/content/Context;Landroid/util/AttributeSet;I)V:" jni_signature="(Landroid/content/Context;Landroid/util/AttributeSet;I)V" managed_parameters="Android.Content.Context, Mono.Android:Android.Util.IAttributeSet, Mono.Android:System.Int32, System.Private.CoreLib" params="android.content.Context p0, android.util.AttributeSet p1, int p2" retval="void" is_dynamically_registered="True" super_call="p0, p1, p2" activate_call="p0, p1, p2" />
        <constructor name="MauiDrawingView" method="n_.ctor:(Landroid/content/Context;Landroid/util/AttributeSet;)V:" jni_signature="(Landroid/content/Context;Landroid/util/AttributeSet;)V" managed_parameters="Android.Content.Context, Mono.Android:Android.Util.IAttributeSet, Mono.Android" params="android.content.Context p0, android.util.AttributeSet p1" retval="void" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
        <constructor name="MauiDrawingView" method="n_.ctor:(Landroid/content/Context;)V:" jni_signature="(Landroid/content/Context;)V" managed_parameters="Android.Content.Context, Mono.Android" params="android.content.Context p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </constructors>
      <methods>
        <method name="onTouchEvent" method="n_onTouchEvent:(Landroid/view/MotionEvent;)Z:GetOnTouchEvent_Landroid_view_MotionEvent_Handler" jni_signature="(Landroid/view/MotionEvent;)Z" params="android.view.MotionEvent p0" retval="boolean" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </methods>
    </type>
    <type name="MauiPopup" package="crc64159f3caeb1269279" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="android.app.Dialog" partial_assembly_qualified_name="CommunityToolkit.Maui.Core.Views.MauiPopup, CommunityToolkit.Maui.Core">
      <implemented_interfaces>
        <interface name="android.content.DialogInterface.OnCancelListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="MauiPopup" method="n_.ctor:(Landroid/content/Context;ZLandroid/content/DialogInterface$OnCancelListener;)V:" jni_signature="(Landroid/content/Context;ZLandroid/content/DialogInterface$OnCancelListener;)V" managed_parameters="Android.Content.Context, Mono.Android:System.Boolean, System.Private.CoreLib:Android.Content.IDialogInterfaceOnCancelListener, Mono.Android" params="android.content.Context p0, boolean p1, android.content.DialogInterface.OnCancelListener p2" retval="void" is_dynamically_registered="True" super_call="p0, p1, p2" activate_call="p0, p1, p2" />
        <constructor name="MauiPopup" method="n_.ctor:(Landroid/content/Context;I)V:" jni_signature="(Landroid/content/Context;I)V" managed_parameters="Android.Content.Context, Mono.Android:System.Int32, System.Private.CoreLib" params="android.content.Context p0, int p1" retval="void" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
        <constructor name="MauiPopup" method="n_.ctor:(Landroid/content/Context;)V:" jni_signature="(Landroid/content/Context;)V" managed_parameters="Android.Content.Context, Mono.Android" params="android.content.Context p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </constructors>
      <methods>
        <method name="show" method="n_show:()V:GetShowHandler" jni_signature="()V" retval="void" is_dynamically_registered="True" />
        <method name="onTouchEvent" method="n_onTouchEvent:(Landroid/view/MotionEvent;)Z:GetOnTouchEvent_Landroid_view_MotionEvent_Handler" jni_signature="(Landroid/view/MotionEvent;)Z" params="android.view.MotionEvent p0" retval="boolean" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onCancel" method="n_onCancel:(Landroid/content/DialogInterface;)V:GetOnCancel_Landroid_content_DialogInterface_Handler:Android.Content.IDialogInterfaceOnCancelListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" jni_signature="(Landroid/content/DialogInterface;)V" params="android.content.DialogInterface p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </methods>
    </type>
    <type name="MauiSemanticOrderView" package="crc64159f3caeb1269279" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="crc6452ffdc5b34af3a0f.ContentViewGroup" partial_assembly_qualified_name="CommunityToolkit.Maui.Core.Views.MauiSemanticOrderView, CommunityToolkit.Maui.Core">
      <constructors>
        <constructor name="MauiSemanticOrderView" method="n_.ctor:(Landroid/content/Context;)V:" jni_signature="(Landroid/content/Context;)V" managed_parameters="Android.Content.Context, Mono.Android" params="android.content.Context p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <constructor name="MauiSemanticOrderView" method="n_.ctor:(Landroid/content/Context;Landroid/util/AttributeSet;)V:" jni_signature="(Landroid/content/Context;Landroid/util/AttributeSet;)V" managed_parameters="Android.Content.Context, Mono.Android:Android.Util.IAttributeSet, Mono.Android" params="android.content.Context p0, android.util.AttributeSet p1" retval="void" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
        <constructor name="MauiSemanticOrderView" method="n_.ctor:(Landroid/content/Context;Landroid/util/AttributeSet;I)V:" jni_signature="(Landroid/content/Context;Landroid/util/AttributeSet;I)V" managed_parameters="Android.Content.Context, Mono.Android:Android.Util.IAttributeSet, Mono.Android:System.Int32, System.Private.CoreLib" params="android.content.Context p0, android.util.AttributeSet p1, int p2" retval="void" is_dynamically_registered="True" super_call="p0, p1, p2" activate_call="p0, p1, p2" />
        <constructor name="MauiSemanticOrderView" method="n_.ctor:(Landroid/content/Context;Landroid/util/AttributeSet;II)V:" jni_signature="(Landroid/content/Context;Landroid/util/AttributeSet;II)V" managed_parameters="Android.Content.Context, Mono.Android:Android.Util.IAttributeSet, Mono.Android:System.Int32, System.Private.CoreLib:System.Int32, System.Private.CoreLib" params="android.content.Context p0, android.util.AttributeSet p1, int p2, int p3" retval="void" is_dynamically_registered="True" super_call="p0, p1, p2, p3" activate_call="p0, p1, p2, p3" />
      </constructors>
      <methods>
        <method name="onLayout" method="n_onLayout:(ZIIII)V:GetOnLayout_ZIIIIHandler" jni_signature="(ZIIII)V" params="boolean p0, int p1, int p2, int p3, int p4" retval="void" is_dynamically_registered="True" super_call="p0, p1, p2, p3, p4" activate_call="p0, p1, p2, p3, p4" />
      </methods>
    </type>
    <type name="FragmentLifecycleManager" package="crc6436e425876cb621d9" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="androidx.fragment.app.FragmentManager.FragmentLifecycleCallbacks" partial_assembly_qualified_name="CommunityToolkit.Maui.Core.Services.FragmentLifecycleManager, CommunityToolkit.Maui.Core">
      <constructors>
        <constructor name="FragmentLifecycleManager" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onFragmentAttached" method="n_onFragmentAttached:(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;Landroid/content/Context;)V:GetOnFragmentAttached_Landroidx_fragment_app_FragmentManager_Landroidx_fragment_app_Fragment_Landroid_content_Context_Handler" jni_signature="(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;Landroid/content/Context;)V" params="androidx.fragment.app.FragmentManager p0, androidx.fragment.app.Fragment p1, android.content.Context p2" retval="void" is_dynamically_registered="True" super_call="p0, p1, p2" activate_call="p0, p1, p2" />
        <method name="onFragmentCreated" method="n_onFragmentCreated:(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;Landroid/os/Bundle;)V:GetOnFragmentCreated_Landroidx_fragment_app_FragmentManager_Landroidx_fragment_app_Fragment_Landroid_os_Bundle_Handler" jni_signature="(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;Landroid/os/Bundle;)V" params="androidx.fragment.app.FragmentManager p0, androidx.fragment.app.Fragment p1, android.os.Bundle p2" retval="void" is_dynamically_registered="True" super_call="p0, p1, p2" activate_call="p0, p1, p2" />
        <method name="onFragmentDestroyed" method="n_onFragmentDestroyed:(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;)V:GetOnFragmentDestroyed_Landroidx_fragment_app_FragmentManager_Landroidx_fragment_app_Fragment_Handler" jni_signature="(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;)V" params="androidx.fragment.app.FragmentManager p0, androidx.fragment.app.Fragment p1" retval="void" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
        <method name="onFragmentDetached" method="n_onFragmentDetached:(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;)V:GetOnFragmentDetached_Landroidx_fragment_app_FragmentManager_Landroidx_fragment_app_Fragment_Handler" jni_signature="(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;)V" params="androidx.fragment.app.FragmentManager p0, androidx.fragment.app.Fragment p1" retval="void" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
        <method name="onFragmentPaused" method="n_onFragmentPaused:(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;)V:GetOnFragmentPaused_Landroidx_fragment_app_FragmentManager_Landroidx_fragment_app_Fragment_Handler" jni_signature="(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;)V" params="androidx.fragment.app.FragmentManager p0, androidx.fragment.app.Fragment p1" retval="void" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
        <method name="onFragmentPreAttached" method="n_onFragmentPreAttached:(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;Landroid/content/Context;)V:GetOnFragmentPreAttached_Landroidx_fragment_app_FragmentManager_Landroidx_fragment_app_Fragment_Landroid_content_Context_Handler" jni_signature="(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;Landroid/content/Context;)V" params="androidx.fragment.app.FragmentManager p0, androidx.fragment.app.Fragment p1, android.content.Context p2" retval="void" is_dynamically_registered="True" super_call="p0, p1, p2" activate_call="p0, p1, p2" />
        <method name="onFragmentPreCreated" method="n_onFragmentPreCreated:(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;Landroid/os/Bundle;)V:GetOnFragmentPreCreated_Landroidx_fragment_app_FragmentManager_Landroidx_fragment_app_Fragment_Landroid_os_Bundle_Handler" jni_signature="(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;Landroid/os/Bundle;)V" params="androidx.fragment.app.FragmentManager p0, androidx.fragment.app.Fragment p1, android.os.Bundle p2" retval="void" is_dynamically_registered="True" super_call="p0, p1, p2" activate_call="p0, p1, p2" />
        <method name="onFragmentResumed" method="n_onFragmentResumed:(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;)V:GetOnFragmentResumed_Landroidx_fragment_app_FragmentManager_Landroidx_fragment_app_Fragment_Handler" jni_signature="(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;)V" params="androidx.fragment.app.FragmentManager p0, androidx.fragment.app.Fragment p1" retval="void" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
        <method name="onFragmentSaveInstanceState" method="n_onFragmentSaveInstanceState:(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;Landroid/os/Bundle;)V:GetOnFragmentSaveInstanceState_Landroidx_fragment_app_FragmentManager_Landroidx_fragment_app_Fragment_Landroid_os_Bundle_Handler" jni_signature="(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;Landroid/os/Bundle;)V" params="androidx.fragment.app.FragmentManager p0, androidx.fragment.app.Fragment p1, android.os.Bundle p2" retval="void" is_dynamically_registered="True" super_call="p0, p1, p2" activate_call="p0, p1, p2" />
        <method name="onFragmentStarted" method="n_onFragmentStarted:(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;)V:GetOnFragmentStarted_Landroidx_fragment_app_FragmentManager_Landroidx_fragment_app_Fragment_Handler" jni_signature="(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;)V" params="androidx.fragment.app.FragmentManager p0, androidx.fragment.app.Fragment p1" retval="void" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
        <method name="onFragmentStopped" method="n_onFragmentStopped:(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;)V:GetOnFragmentStopped_Landroidx_fragment_app_FragmentManager_Landroidx_fragment_app_Fragment_Handler" jni_signature="(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;)V" params="androidx.fragment.app.FragmentManager p0, androidx.fragment.app.Fragment p1" retval="void" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
        <method name="onFragmentViewCreated" method="n_onFragmentViewCreated:(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;Landroid/view/View;Landroid/os/Bundle;)V:GetOnFragmentViewCreated_Landroidx_fragment_app_FragmentManager_Landroidx_fragment_app_Fragment_Landroid_view_View_Landroid_os_Bundle_Handler" jni_signature="(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;Landroid/view/View;Landroid/os/Bundle;)V" params="androidx.fragment.app.FragmentManager p0, androidx.fragment.app.Fragment p1, android.view.View p2, android.os.Bundle p3" retval="void" is_dynamically_registered="True" super_call="p0, p1, p2, p3" activate_call="p0, p1, p2, p3" />
        <method name="onFragmentViewDestroyed" method="n_onFragmentViewDestroyed:(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;)V:GetOnFragmentViewDestroyed_Landroidx_fragment_app_FragmentManager_Landroidx_fragment_app_Fragment_Handler" jni_signature="(Landroidx/fragment/app/FragmentManager;Landroidx/fragment/app/Fragment;)V" params="androidx.fragment.app.FragmentManager p0, androidx.fragment.app.Fragment p1" retval="void" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
      </methods>
    </type>
  </jcw-types>
  <acw-types partial-assembly-name="CommunityToolkit.Maui.Core" module-name="CommunityToolkit.Maui.Core.dll">
    <type assembly-qualified-name="CommunityToolkit.Maui.Media.OfflineSpeechToTextImplementation+SpeechRecognitionListener, CommunityToolkit.Maui.Core, Version=12.2.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="communitytoolkit.maui.media.OfflineSpeechToTextImplementation_SpeechRecognitionListener" java-key="crc64d6358e7bf64fbac4.OfflineSpeechToTextImplementation_SpeechRecognitionListener" managed-key="CommunityToolkit.Maui.Media.OfflineSpeechToTextImplementation.SpeechRecognitionListener" partial-assembly-qualified-name="CommunityToolkit.Maui.Media.OfflineSpeechToTextImplementation+SpeechRecognitionListener, CommunityToolkit.Maui.Core" />
    <type assembly-qualified-name="CommunityToolkit.Maui.Media.RecognitionSupportCallback, CommunityToolkit.Maui.Core, Version=12.2.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="communitytoolkit.maui.media.RecognitionSupportCallback" java-key="crc64d6358e7bf64fbac4.RecognitionSupportCallback" managed-key="CommunityToolkit.Maui.Media.RecognitionSupportCallback" partial-assembly-qualified-name="CommunityToolkit.Maui.Media.RecognitionSupportCallback, CommunityToolkit.Maui.Core" />
    <type assembly-qualified-name="CommunityToolkit.Maui.Media.Executor, CommunityToolkit.Maui.Core, Version=12.2.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="communitytoolkit.maui.media.Executor" java-key="crc64d6358e7bf64fbac4.Executor" managed-key="CommunityToolkit.Maui.Media.Executor" partial-assembly-qualified-name="CommunityToolkit.Maui.Media.Executor, CommunityToolkit.Maui.Core" />
    <type assembly-qualified-name="CommunityToolkit.Maui.Media.ModelDownloadListener, CommunityToolkit.Maui.Core, Version=12.2.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="communitytoolkit.maui.media.ModelDownloadListener" java-key="crc64d6358e7bf64fbac4.ModelDownloadListener" managed-key="CommunityToolkit.Maui.Media.ModelDownloadListener" partial-assembly-qualified-name="CommunityToolkit.Maui.Media.ModelDownloadListener, CommunityToolkit.Maui.Core" />
    <type assembly-qualified-name="CommunityToolkit.Maui.Media.SpeechToTextImplementation+SpeechRecognitionListener, CommunityToolkit.Maui.Core, Version=12.2.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="communitytoolkit.maui.media.SpeechToTextImplementation_SpeechRecognitionListener" java-key="crc64d6358e7bf64fbac4.SpeechToTextImplementation_SpeechRecognitionListener" managed-key="CommunityToolkit.Maui.Media.SpeechToTextImplementation.SpeechRecognitionListener" partial-assembly-qualified-name="CommunityToolkit.Maui.Media.SpeechToTextImplementation+SpeechRecognitionListener, CommunityToolkit.Maui.Core" />
    <type assembly-qualified-name="CommunityToolkit.Maui.Core.Views.MauiDrawingView, CommunityToolkit.Maui.Core, Version=12.2.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="communitytoolkit.maui.core.views.MauiDrawingView" java-key="crc64159f3caeb1269279.MauiDrawingView" managed-key="CommunityToolkit.Maui.Core.Views.MauiDrawingView" partial-assembly-qualified-name="CommunityToolkit.Maui.Core.Views.MauiDrawingView, CommunityToolkit.Maui.Core" />
    <type assembly-qualified-name="CommunityToolkit.Maui.Core.Views.MauiPopup, CommunityToolkit.Maui.Core, Version=12.2.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="communitytoolkit.maui.core.views.MauiPopup" java-key="crc64159f3caeb1269279.MauiPopup" managed-key="CommunityToolkit.Maui.Core.Views.MauiPopup" partial-assembly-qualified-name="CommunityToolkit.Maui.Core.Views.MauiPopup, CommunityToolkit.Maui.Core" />
    <type assembly-qualified-name="CommunityToolkit.Maui.Core.Views.MauiSemanticOrderView, CommunityToolkit.Maui.Core, Version=12.2.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="communitytoolkit.maui.core.views.MauiSemanticOrderView" java-key="crc64159f3caeb1269279.MauiSemanticOrderView" managed-key="CommunityToolkit.Maui.Core.Views.MauiSemanticOrderView" partial-assembly-qualified-name="CommunityToolkit.Maui.Core.Views.MauiSemanticOrderView, CommunityToolkit.Maui.Core" />
    <type assembly-qualified-name="CommunityToolkit.Maui.Core.Services.FragmentLifecycleManager, CommunityToolkit.Maui.Core, Version=12.2.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="communitytoolkit.maui.core.services.FragmentLifecycleManager" java-key="crc6436e425876cb621d9.FragmentLifecycleManager" managed-key="CommunityToolkit.Maui.Core.Services.FragmentLifecycleManager" partial-assembly-qualified-name="CommunityToolkit.Maui.Core.Services.FragmentLifecycleManager, CommunityToolkit.Maui.Core" />
  </acw-types>
</api>