<api>
  <jcw-types>
    <type name="CancellationSignal_OnCancelListenerImplementor" package="mono.androidx.core.os" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.OS.CancellationSignal+IOnCancelListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.os.CancellationSignal.OnCancelListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="CancellationSignal_OnCancelListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onCancel" method="n_onCancel:()V:GetOnCancelHandler:AndroidX.Core.OS.CancellationSignal+IOnCancelListenerInvoker, Xamarin.AndroidX.Core" jni_signature="()V" retval="void" is_dynamically_registered="True" />
      </methods>
    </type>
    <type name="SharedElementCallback_OnSharedElementsReadyListenerImplementor" package="mono.androidx.core.app" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.App.SharedElementCallback+IOnSharedElementsReadyListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.app.SharedElementCallback.OnSharedElementsReadyListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="SharedElementCallback_OnSharedElementsReadyListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onSharedElementsReady" method="n_onSharedElementsReady:()V:GetOnSharedElementsReadyHandler:AndroidX.Core.App.SharedElementCallback+IOnSharedElementsReadyListenerInvoker, Xamarin.AndroidX.Core" jni_signature="()V" retval="void" is_dynamically_registered="True" />
      </methods>
    </type>
    <type name="NestedScrollView_OnScrollChangeListenerImplementor" package="mono.androidx.core.widget" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.Widget.NestedScrollView+IOnScrollChangeListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.widget.NestedScrollView.OnScrollChangeListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="NestedScrollView_OnScrollChangeListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onScrollChange" method="n_onScrollChange:(Landroidx/core/widget/NestedScrollView;IIII)V:GetOnScrollChange_Landroidx_core_widget_NestedScrollView_IIIIHandler:AndroidX.Core.Widget.NestedScrollView+IOnScrollChangeListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Landroidx/core/widget/NestedScrollView;IIII)V" params="androidx.core.widget.NestedScrollView p0, int p1, int p2, int p3, int p4" retval="void" is_dynamically_registered="True" super_call="p0, p1, p2, p3, p4" activate_call="p0, p1, p2, p3, p4" />
      </methods>
    </type>
    <type name="ActionProvider_SubUiVisibilityListenerImplementor" package="mono.androidx.core.view" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.ActionProvider+ISubUiVisibilityListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.ActionProvider.SubUiVisibilityListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="ActionProvider_SubUiVisibilityListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onSubUiVisibilityChanged" method="n_onSubUiVisibilityChanged:(Z)V:GetOnSubUiVisibilityChanged_ZHandler:AndroidX.Core.View.ActionProvider+ISubUiVisibilityListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Z)V" params="boolean p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </methods>
    </type>
    <type name="ActionProvider_VisibilityListenerImplementor" package="mono.androidx.core.view" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.ActionProvider+IVisibilityListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.ActionProvider.VisibilityListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="ActionProvider_VisibilityListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onActionProviderVisibilityChanged" method="n_onActionProviderVisibilityChanged:(Z)V:GetOnActionProviderVisibilityChanged_ZHandler:AndroidX.Core.View.ActionProvider+IVisibilityListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Z)V" params="boolean p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </methods>
    </type>
    <type name="DragStartHelper_OnDragStartListenerImplementor" package="mono.androidx.core.view" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.DragStartHelper+IOnDragStartListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.DragStartHelper.OnDragStartListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="DragStartHelper_OnDragStartListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onDragStart" method="n_onDragStart:(Landroid/view/View;Landroidx/core/view/DragStartHelper;)Z:GetOnDragStart_Landroid_view_View_Landroidx_core_view_DragStartHelper_Handler:AndroidX.Core.View.DragStartHelper+IOnDragStartListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Landroid/view/View;Landroidx/core/view/DragStartHelper;)Z" params="android.view.View p0, androidx.core.view.DragStartHelper p1" retval="boolean" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
      </methods>
    </type>
    <type name="OnApplyWindowInsetsListenerImplementor" package="mono.androidx.core.view" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.IOnApplyWindowInsetsListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.OnApplyWindowInsetsListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="OnApplyWindowInsetsListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onApplyWindowInsets" method="n_onApplyWindowInsets:(Landroid/view/View;Landroidx/core/view/WindowInsetsCompat;)Landroidx/core/view/WindowInsetsCompat;:GetOnApplyWindowInsets_Landroid_view_View_Landroidx_core_view_WindowInsetsCompat_Handler:AndroidX.Core.View.IOnApplyWindowInsetsListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Landroid/view/View;Landroidx/core/view/WindowInsetsCompat;)Landroidx/core/view/WindowInsetsCompat;" params="android.view.View p0, androidx.core.view.WindowInsetsCompat p1" retval="androidx.core.view.WindowInsetsCompat" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
      </methods>
    </type>
    <type name="OnReceiveContentListenerImplementor" package="mono.androidx.core.view" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.IOnReceiveContentListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.OnReceiveContentListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="OnReceiveContentListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onReceiveContent" method="n_onReceiveContent:(Landroid/view/View;Landroidx/core/view/ContentInfoCompat;)Landroidx/core/view/ContentInfoCompat;:GetOnReceiveContent_Landroid_view_View_Landroidx_core_view_ContentInfoCompat_Handler:AndroidX.Core.View.IOnReceiveContentListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Landroid/view/View;Landroidx/core/view/ContentInfoCompat;)Landroidx/core/view/ContentInfoCompat;" params="android.view.View p0, androidx.core.view.ContentInfoCompat p1" retval="androidx.core.view.ContentInfoCompat" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
      </methods>
    </type>
    <type name="ViewPropertyAnimatorListenerImplementor" package="mono.androidx.core.view" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.IViewPropertyAnimatorListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.ViewPropertyAnimatorListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="ViewPropertyAnimatorListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onAnimationCancel" method="n_onAnimationCancel:(Landroid/view/View;)V:GetOnAnimationCancel_Landroid_view_View_Handler:AndroidX.Core.View.IViewPropertyAnimatorListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Landroid/view/View;)V" params="android.view.View p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onAnimationEnd" method="n_onAnimationEnd:(Landroid/view/View;)V:GetOnAnimationEnd_Landroid_view_View_Handler:AndroidX.Core.View.IViewPropertyAnimatorListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Landroid/view/View;)V" params="android.view.View p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onAnimationStart" method="n_onAnimationStart:(Landroid/view/View;)V:GetOnAnimationStart_Landroid_view_View_Handler:AndroidX.Core.View.IViewPropertyAnimatorListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Landroid/view/View;)V" params="android.view.View p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </methods>
    </type>
    <type name="ViewPropertyAnimatorUpdateListenerImplementor" package="mono.androidx.core.view" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.IViewPropertyAnimatorUpdateListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.ViewPropertyAnimatorUpdateListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="ViewPropertyAnimatorUpdateListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onAnimationUpdate" method="n_onAnimationUpdate:(Landroid/view/View;)V:GetOnAnimationUpdate_Landroid_view_View_Handler:AndroidX.Core.View.IViewPropertyAnimatorUpdateListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Landroid/view/View;)V" params="android.view.View p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </methods>
    </type>
    <type name="MenuItemCompat_OnActionExpandListenerImplementor" package="mono.androidx.core.view" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.MenuItemCompat+IOnActionExpandListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.MenuItemCompat.OnActionExpandListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="MenuItemCompat_OnActionExpandListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onMenuItemActionCollapse" method="n_onMenuItemActionCollapse:(Landroid/view/MenuItem;)Z:GetOnMenuItemActionCollapse_Landroid_view_MenuItem_Handler:AndroidX.Core.View.MenuItemCompat+IOnActionExpandListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Landroid/view/MenuItem;)Z" params="android.view.MenuItem p0" retval="boolean" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
        <method name="onMenuItemActionExpand" method="n_onMenuItemActionExpand:(Landroid/view/MenuItem;)Z:GetOnMenuItemActionExpand_Landroid_view_MenuItem_Handler:AndroidX.Core.View.MenuItemCompat+IOnActionExpandListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Landroid/view/MenuItem;)Z" params="android.view.MenuItem p0" retval="boolean" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </methods>
    </type>
    <type name="WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor" package="mono.androidx.core.view" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.WindowInsetsControllerCompat+IOnControllableInsetsChangedListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.WindowInsetsControllerCompat.OnControllableInsetsChangedListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onControllableInsetsChanged" method="n_onControllableInsetsChanged:(Landroidx/core/view/WindowInsetsControllerCompat;I)V:GetOnControllableInsetsChanged_Landroidx_core_view_WindowInsetsControllerCompat_IHandler:AndroidX.Core.View.WindowInsetsControllerCompat+IOnControllableInsetsChangedListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Landroidx/core/view/WindowInsetsControllerCompat;I)V" params="androidx.core.view.WindowInsetsControllerCompat p0, int p1" retval="void" is_dynamically_registered="True" super_call="p0, p1" activate_call="p0, p1" />
      </methods>
    </type>
    <type name="InputConnectionCompat_OnCommitContentListenerImplementor" package="mono.androidx.core.view.inputmethod" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.InputMethod.InputConnectionCompat+IOnCommitContentListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.inputmethod.InputConnectionCompat.OnCommitContentListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="InputConnectionCompat_OnCommitContentListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onCommitContent" method="n_onCommitContent:(Landroidx/core/view/inputmethod/InputContentInfoCompat;ILandroid/os/Bundle;)Z:GetOnCommitContent_Landroidx_core_view_inputmethod_InputContentInfoCompat_ILandroid_os_Bundle_Handler:AndroidX.Core.View.InputMethod.InputConnectionCompat+IOnCommitContentListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Landroidx/core/view/inputmethod/InputContentInfoCompat;ILandroid/os/Bundle;)Z" params="androidx.core.view.inputmethod.InputContentInfoCompat p0, int p1, android.os.Bundle p2" retval="boolean" is_dynamically_registered="True" super_call="p0, p1, p2" activate_call="p0, p1, p2" />
      </methods>
    </type>
    <type name="AccessibilityManagerCompat_AccessibilityStateChangeListenerImplementor" package="mono.androidx.core.view.accessibility" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.Accessibility.AccessibilityManagerCompat+IAccessibilityStateChangeListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="AccessibilityManagerCompat_AccessibilityStateChangeListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onAccessibilityStateChanged" method="n_onAccessibilityStateChanged:(Z)V:GetOnAccessibilityStateChanged_ZHandler:AndroidX.Core.View.Accessibility.AccessibilityManagerCompat+IAccessibilityStateChangeListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Z)V" params="boolean p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </methods>
    </type>
    <type name="AccessibilityManagerCompat_TouchExplorationStateChangeListenerImplementor" package="mono.androidx.core.view.accessibility" application_java_class="android.app.Application" mono_runtime_initialization="mono.MonoPackageManager.LoadApplication (context);" extends_type="java.lang.Object" partial_assembly_qualified_name="AndroidX.Core.View.Accessibility.AccessibilityManagerCompat+ITouchExplorationStateChangeListenerImplementor, Xamarin.AndroidX.Core">
      <implemented_interfaces>
        <interface name="androidx.core.view.accessibility.AccessibilityManagerCompat.TouchExplorationStateChangeListener" />
      </implemented_interfaces>
      <constructors>
        <constructor name="AccessibilityManagerCompat_TouchExplorationStateChangeListenerImplementor" method="n_.ctor:()V:" jni_signature="()V" managed_parameters="" retval="void" is_dynamically_registered="True" />
      </constructors>
      <methods>
        <method name="onTouchExplorationStateChanged" method="n_onTouchExplorationStateChanged:(Z)V:GetOnTouchExplorationStateChanged_ZHandler:AndroidX.Core.View.Accessibility.AccessibilityManagerCompat+ITouchExplorationStateChangeListenerInvoker, Xamarin.AndroidX.Core" jni_signature="(Z)V" params="boolean p0" retval="void" is_dynamically_registered="True" super_call="p0" activate_call="p0" />
      </methods>
    </type>
  </jcw-types>
  <acw-types partial-assembly-name="Xamarin.AndroidX.Core" module-name="Xamarin.AndroidX.Core.dll">
    <type assembly-qualified-name="Android.Support.V4.OS.IResultReceiver, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="android.support.v4.os.IResultReceiver" java-key="android.support.v4.os.IResultReceiver" managed-key="Android.Support.V4.OS.IResultReceiver" partial-assembly-qualified-name="Android.Support.V4.OS.IResultReceiver, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="Android.Support.V4.OS.IResultReceiver2, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="android.support.v4.os.IResultReceiver2" java-key="android.support.v4.os.IResultReceiver2" managed-key="Android.Support.V4.OS.IResultReceiver2" partial-assembly-qualified-name="Android.Support.V4.OS.IResultReceiver2, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="Android.Support.V4.App.INotificationSideChannel, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="android.support.v4.app.INotificationSideChannel" java-key="android.support.v4.app.INotificationSideChannel" managed-key="Android.Support.V4.App.INotificationSideChannel" partial-assembly-qualified-name="Android.Support.V4.App.INotificationSideChannel, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Util.IConsumer, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.util.Consumer" java-key="androidx.core.util.Consumer" managed-key="AndroidX.Core.Util.IConsumer" partial-assembly-qualified-name="AndroidX.Core.Util.IConsumer, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Util.IFunction, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.util.Function" java-key="androidx.core.util.Function" managed-key="AndroidX.Core.Util.IFunction" partial-assembly-qualified-name="AndroidX.Core.Util.IFunction, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Util.IPredicate, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.util.Predicate" java-key="androidx.core.util.Predicate" managed-key="AndroidX.Core.Util.IPredicate" partial-assembly-qualified-name="AndroidX.Core.Util.IPredicate, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Util.ISupplier, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.util.Supplier" java-key="androidx.core.util.Supplier" managed-key="AndroidX.Core.Util.ISupplier" partial-assembly-qualified-name="AndroidX.Core.Util.ISupplier, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Util.Pools+IPool, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.util.Pools$Pool" java-key="androidx.core.util.Pools$Pool" managed-key="AndroidX.Core.Util.Pools.IPool" partial-assembly-qualified-name="AndroidX.Core.Util.Pools+IPool, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Util.TypedValueCompat+IComplexDimensionUnit, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.util.TypedValueCompat$ComplexDimensionUnit" java-key="androidx.core.util.TypedValueCompat$ComplexDimensionUnit" managed-key="AndroidX.Core.Util.TypedValueCompat.IComplexDimensionUnit" partial-assembly-qualified-name="AndroidX.Core.Util.TypedValueCompat+IComplexDimensionUnit, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Provider.FontsContractCompat+FontRequestCallback+IFontRequestFailReason, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason" java-key="androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason" managed-key="AndroidX.Core.Provider.FontsContractCompat.FontRequestCallback.IFontRequestFailReason" partial-assembly-qualified-name="AndroidX.Core.Provider.FontsContractCompat+FontRequestCallback+IFontRequestFailReason, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Provider.FontsContractCompat+ITypefaceStyle, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.provider.FontsContractCompat$TypefaceStyle" java-key="androidx.core.provider.FontsContractCompat$TypefaceStyle" managed-key="AndroidX.Core.Provider.FontsContractCompat.ITypefaceStyle" partial-assembly-qualified-name="AndroidX.Core.Provider.FontsContractCompat+ITypefaceStyle, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Provider.SelfDestructiveThread+IReplyCallback, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.provider.SelfDestructiveThread$ReplyCallback" java-key="androidx.core.provider.SelfDestructiveThread$ReplyCallback" managed-key="AndroidX.Core.Provider.SelfDestructiveThread.IReplyCallback" partial-assembly-qualified-name="AndroidX.Core.Provider.SelfDestructiveThread+IReplyCallback, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.OS.BuildCompat+IPrereleaseSdkCheck, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.os.BuildCompat$PrereleaseSdkCheck" java-key="androidx.core.os.BuildCompat$PrereleaseSdkCheck" managed-key="AndroidX.Core.OS.BuildCompat.IPrereleaseSdkCheck" partial-assembly-qualified-name="AndroidX.Core.OS.BuildCompat+IPrereleaseSdkCheck, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.OS.CancellationSignal+IOnCancelListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.os.CancellationSignal$OnCancelListener" java-key="androidx.core.os.CancellationSignal$OnCancelListener" managed-key="AndroidX.Core.OS.CancellationSignal.IOnCancelListener" partial-assembly-qualified-name="AndroidX.Core.OS.CancellationSignal+IOnCancelListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.OS.CancellationSignal+IOnCancelListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.os.CancellationSignal_OnCancelListenerImplementor" java-key="mono.androidx.core.os.CancellationSignal_OnCancelListenerImplementor" managed-key="AndroidX.Core.OS.CancellationSignal.IOnCancelListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.OS.CancellationSignal+IOnCancelListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.OS.IOutcomeReceiverCompat, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.os.OutcomeReceiverCompat" java-key="androidx.core.os.OutcomeReceiverCompat" managed-key="AndroidX.Core.OS.IOutcomeReceiverCompat" partial-assembly-qualified-name="AndroidX.Core.OS.IOutcomeReceiverCompat, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.OS.IParcelableCompatCreatorCallbacks, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.os.ParcelableCompatCreatorCallbacks" java-key="androidx.core.os.ParcelableCompatCreatorCallbacks" managed-key="AndroidX.Core.OS.IParcelableCompatCreatorCallbacks" partial-assembly-qualified-name="AndroidX.Core.OS.IParcelableCompatCreatorCallbacks, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Net.ConnectivityManagerCompat+IRestrictBackgroundStatus, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus" java-key="androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus" managed-key="AndroidX.Core.Net.ConnectivityManagerCompat.IRestrictBackgroundStatus" partial-assembly-qualified-name="AndroidX.Core.Net.ConnectivityManagerCompat+IRestrictBackgroundStatus, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Location.GnssStatusCompat+IConstellationType, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.location.GnssStatusCompat$ConstellationType" java-key="androidx.core.location.GnssStatusCompat$ConstellationType" managed-key="AndroidX.Core.Location.GnssStatusCompat.IConstellationType" partial-assembly-qualified-name="AndroidX.Core.Location.GnssStatusCompat+IConstellationType, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Location.ILocationListenerCompat, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.location.LocationListenerCompat" java-key="androidx.core.location.LocationListenerCompat" managed-key="AndroidX.Core.Location.ILocationListenerCompat" partial-assembly-qualified-name="AndroidX.Core.Location.ILocationListenerCompat, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Location.LocationRequestCompat+IQuality, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.location.LocationRequestCompat$Quality" java-key="androidx.core.location.LocationRequestCompat$Quality" managed-key="AndroidX.Core.Location.LocationRequestCompat.IQuality" partial-assembly-qualified-name="AndroidX.Core.Location.LocationRequestCompat+IQuality, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Internal.View.ISupportMenu, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.internal.view.SupportMenu" java-key="androidx.core.internal.view.SupportMenu" managed-key="AndroidX.Core.Internal.View.ISupportMenu" partial-assembly-qualified-name="AndroidX.Core.Internal.View.ISupportMenu, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Internal.View.ISupportMenuItem, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.internal.view.SupportMenuItem" java-key="androidx.core.internal.view.SupportMenuItem" managed-key="AndroidX.Core.Internal.View.ISupportMenuItem" partial-assembly-qualified-name="AndroidX.Core.Internal.View.ISupportMenuItem, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Internal.View.ISupportSubMenu, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.internal.view.SupportSubMenu" java-key="androidx.core.internal.view.SupportSubMenu" managed-key="AndroidX.Core.Internal.View.ISupportSubMenu" partial-assembly-qualified-name="AndroidX.Core.Internal.View.ISupportSubMenu, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Hardware.Display.IExperimentalDisplayApi, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.hardware.display.ExperimentalDisplayApi" java-key="androidx.core.hardware.display.ExperimentalDisplayApi" managed-key="AndroidX.Core.Hardware.Display.IExperimentalDisplayApi" partial-assembly-qualified-name="AndroidX.Core.Hardware.Display.IExperimentalDisplayApi, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Graphics.Drawable.IconCompat+IIconType, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.graphics.drawable.IconCompat$IconType" java-key="androidx.core.graphics.drawable.IconCompat$IconType" managed-key="AndroidX.Core.Graphics.Drawable.IconCompat.IIconType" partial-assembly-qualified-name="AndroidX.Core.Graphics.Drawable.IconCompat+IIconType, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Graphics.Drawable.ITintAwareDrawable, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.graphics.drawable.TintAwareDrawable" java-key="androidx.core.graphics.drawable.TintAwareDrawable" managed-key="AndroidX.Core.Graphics.Drawable.ITintAwareDrawable" partial-assembly-qualified-name="AndroidX.Core.Graphics.Drawable.ITintAwareDrawable, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Graphics.Drawable.IWrappedDrawable, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.graphics.drawable.WrappedDrawable" java-key="androidx.core.graphics.drawable.WrappedDrawable" managed-key="AndroidX.Core.Graphics.Drawable.IWrappedDrawable" partial-assembly-qualified-name="AndroidX.Core.Graphics.Drawable.IWrappedDrawable, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Content.ContextCompat+IRegisterReceiverFlags, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.content.ContextCompat$RegisterReceiverFlags" java-key="androidx.core.content.ContextCompat$RegisterReceiverFlags" managed-key="AndroidX.Core.Content.ContextCompat.IRegisterReceiverFlags" partial-assembly-qualified-name="AndroidX.Core.Content.ContextCompat+IRegisterReceiverFlags, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Content.IOnConfigurationChangedProvider, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.content.OnConfigurationChangedProvider" java-key="androidx.core.content.OnConfigurationChangedProvider" managed-key="AndroidX.Core.Content.IOnConfigurationChangedProvider" partial-assembly-qualified-name="AndroidX.Core.Content.IOnConfigurationChangedProvider, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Content.IOnTrimMemoryProvider, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.content.OnTrimMemoryProvider" java-key="androidx.core.content.OnTrimMemoryProvider" managed-key="AndroidX.Core.Content.IOnTrimMemoryProvider" partial-assembly-qualified-name="AndroidX.Core.Content.IOnTrimMemoryProvider, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Content.PackageManagerCompat+IUnusedAppRestrictionsStatus, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.content.PackageManagerCompat$UnusedAppRestrictionsStatus" java-key="androidx.core.content.PackageManagerCompat$UnusedAppRestrictionsStatus" managed-key="AndroidX.Core.Content.PackageManagerCompat.IUnusedAppRestrictionsStatus" partial-assembly-qualified-name="AndroidX.Core.Content.PackageManagerCompat+IUnusedAppRestrictionsStatus, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Content.PermissionChecker+IPermissionResult, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.content.PermissionChecker$PermissionResult" java-key="androidx.core.content.PermissionChecker$PermissionResult" managed-key="AndroidX.Core.Content.PermissionChecker.IPermissionResult" partial-assembly-qualified-name="AndroidX.Core.Content.PermissionChecker+IPermissionResult, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Content.Resources.FontResourcesParserCompat+IFamilyResourceEntry, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry" java-key="androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry" managed-key="AndroidX.Core.Content.Resources.FontResourcesParserCompat.IFamilyResourceEntry" partial-assembly-qualified-name="AndroidX.Core.Content.Resources.FontResourcesParserCompat+IFamilyResourceEntry, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Content.Resources.FontResourcesParserCompat+IFetchStrategy, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.content.res.FontResourcesParserCompat$FetchStrategy" java-key="androidx.core.content.res.FontResourcesParserCompat$FetchStrategy" managed-key="AndroidX.Core.Content.Resources.FontResourcesParserCompat.IFetchStrategy" partial-assembly-qualified-name="AndroidX.Core.Content.Resources.FontResourcesParserCompat+IFetchStrategy, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Content.PM.PermissionInfoCompat+IProtection, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.content.pm.PermissionInfoCompat$Protection" java-key="androidx.core.content.pm.PermissionInfoCompat$Protection" managed-key="AndroidX.Core.Content.PM.PermissionInfoCompat.IProtection" partial-assembly-qualified-name="AndroidX.Core.Content.PM.PermissionInfoCompat+IProtection, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Content.PM.PermissionInfoCompat+IProtectionFlags, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags" java-key="androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags" managed-key="AndroidX.Core.Content.PM.PermissionInfoCompat.IProtectionFlags" partial-assembly-qualified-name="AndroidX.Core.Content.PM.PermissionInfoCompat+IProtectionFlags, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Content.PM.ShortcutInfoCompat+ISurface, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.content.pm.ShortcutInfoCompat$Surface" java-key="androidx.core.content.pm.ShortcutInfoCompat$Surface" managed-key="AndroidX.Core.Content.PM.ShortcutInfoCompat.ISurface" partial-assembly-qualified-name="AndroidX.Core.Content.PM.ShortcutInfoCompat+ISurface, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Content.PM.ShortcutManagerCompat+IShortcutMatchFlags, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.content.pm.ShortcutManagerCompat$ShortcutMatchFlags" java-key="androidx.core.content.pm.ShortcutManagerCompat$ShortcutMatchFlags" managed-key="AndroidX.Core.Content.PM.ShortcutManagerCompat.IShortcutMatchFlags" partial-assembly-qualified-name="AndroidX.Core.Content.PM.ShortcutManagerCompat+IShortcutMatchFlags, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.ActivityCompat+IOnRequestPermissionsResultCallback, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback" java-key="androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback" managed-key="AndroidX.Core.App.ActivityCompat.IOnRequestPermissionsResultCallback" partial-assembly-qualified-name="AndroidX.Core.App.ActivityCompat+IOnRequestPermissionsResultCallback, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.ActivityCompat+IPermissionCompatDelegate, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.ActivityCompat$PermissionCompatDelegate" java-key="androidx.core.app.ActivityCompat$PermissionCompatDelegate" managed-key="AndroidX.Core.App.ActivityCompat.IPermissionCompatDelegate" partial-assembly-qualified-name="AndroidX.Core.App.ActivityCompat+IPermissionCompatDelegate, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.ActivityCompat+IRequestPermissionsRequestCodeValidator, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator" java-key="androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator" managed-key="AndroidX.Core.App.ActivityCompat.IRequestPermissionsRequestCodeValidator" partial-assembly-qualified-name="AndroidX.Core.App.ActivityCompat+IRequestPermissionsRequestCodeValidator, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.ActivityOptionsCompat+IBackgroundActivityStartMode, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.ActivityOptionsCompat$BackgroundActivityStartMode" java-key="androidx.core.app.ActivityOptionsCompat$BackgroundActivityStartMode" managed-key="AndroidX.Core.App.ActivityOptionsCompat.IBackgroundActivityStartMode" partial-assembly-qualified-name="AndroidX.Core.App.ActivityOptionsCompat+IBackgroundActivityStartMode, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.CoreComponentFactory+ICompatWrapped, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.CoreComponentFactory$CompatWrapped" java-key="androidx.core.app.CoreComponentFactory$CompatWrapped" managed-key="AndroidX.Core.App.CoreComponentFactory.ICompatWrapped" partial-assembly-qualified-name="AndroidX.Core.App.CoreComponentFactory+ICompatWrapped, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.FrameMetricsAggregator+IMetricType, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.FrameMetricsAggregator$MetricType" java-key="androidx.core.app.FrameMetricsAggregator$MetricType" managed-key="AndroidX.Core.App.FrameMetricsAggregator.IMetricType" partial-assembly-qualified-name="AndroidX.Core.App.FrameMetricsAggregator+IMetricType, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.GrammaticalInflectionManagerCompat+IGrammaticalGender, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.GrammaticalInflectionManagerCompat$GrammaticalGender" java-key="androidx.core.app.GrammaticalInflectionManagerCompat$GrammaticalGender" managed-key="AndroidX.Core.App.GrammaticalInflectionManagerCompat.IGrammaticalGender" partial-assembly-qualified-name="AndroidX.Core.App.GrammaticalInflectionManagerCompat+IGrammaticalGender, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.INotificationBuilderWithBuilderAccessor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.NotificationBuilderWithBuilderAccessor" java-key="androidx.core.app.NotificationBuilderWithBuilderAccessor" managed-key="AndroidX.Core.App.INotificationBuilderWithBuilderAccessor" partial-assembly-qualified-name="AndroidX.Core.App.INotificationBuilderWithBuilderAccessor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.IOnMultiWindowModeChangedProvider, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.OnMultiWindowModeChangedProvider" java-key="androidx.core.app.OnMultiWindowModeChangedProvider" managed-key="AndroidX.Core.App.IOnMultiWindowModeChangedProvider" partial-assembly-qualified-name="AndroidX.Core.App.IOnMultiWindowModeChangedProvider, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.IOnNewIntentProvider, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.OnNewIntentProvider" java-key="androidx.core.app.OnNewIntentProvider" managed-key="AndroidX.Core.App.IOnNewIntentProvider" partial-assembly-qualified-name="AndroidX.Core.App.IOnNewIntentProvider, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.IOnPictureInPictureModeChangedProvider, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.OnPictureInPictureModeChangedProvider" java-key="androidx.core.app.OnPictureInPictureModeChangedProvider" managed-key="AndroidX.Core.App.IOnPictureInPictureModeChangedProvider" partial-assembly-qualified-name="AndroidX.Core.App.IOnPictureInPictureModeChangedProvider, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.IOnUserLeaveHintProvider, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.OnUserLeaveHintProvider" java-key="androidx.core.app.OnUserLeaveHintProvider" managed-key="AndroidX.Core.App.IOnUserLeaveHintProvider" partial-assembly-qualified-name="AndroidX.Core.App.IOnUserLeaveHintProvider, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.NotificationCompat+Action+IExtender, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.NotificationCompat$Action$Extender" java-key="androidx.core.app.NotificationCompat$Action$Extender" managed-key="AndroidX.Core.App.NotificationCompat.Action.IExtender" partial-assembly-qualified-name="AndroidX.Core.App.NotificationCompat+Action+IExtender, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.NotificationCompat+Action+ISemanticAction, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.NotificationCompat$Action$SemanticAction" java-key="androidx.core.app.NotificationCompat$Action$SemanticAction" managed-key="AndroidX.Core.App.NotificationCompat.Action.ISemanticAction" partial-assembly-qualified-name="AndroidX.Core.App.NotificationCompat+Action+ISemanticAction, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.NotificationCompat+IBadgeIconType, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.NotificationCompat$BadgeIconType" java-key="androidx.core.app.NotificationCompat$BadgeIconType" managed-key="AndroidX.Core.App.NotificationCompat.IBadgeIconType" partial-assembly-qualified-name="AndroidX.Core.App.NotificationCompat+IBadgeIconType, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.NotificationCompat+CallStyle+ICallType, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.NotificationCompat$CallStyle$CallType" java-key="androidx.core.app.NotificationCompat$CallStyle$CallType" managed-key="AndroidX.Core.App.NotificationCompat.CallStyle.ICallType" partial-assembly-qualified-name="AndroidX.Core.App.NotificationCompat+CallStyle+ICallType, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.NotificationCompat+IExtender, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.NotificationCompat$Extender" java-key="androidx.core.app.NotificationCompat$Extender" managed-key="AndroidX.Core.App.NotificationCompat.IExtender" partial-assembly-qualified-name="AndroidX.Core.App.NotificationCompat+IExtender, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.NotificationCompat+IGroupAlertBehavior, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.NotificationCompat$GroupAlertBehavior" java-key="androidx.core.app.NotificationCompat$GroupAlertBehavior" managed-key="AndroidX.Core.App.NotificationCompat.IGroupAlertBehavior" partial-assembly-qualified-name="AndroidX.Core.App.NotificationCompat+IGroupAlertBehavior, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.NotificationCompat+INotificationVisibility, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.NotificationCompat$NotificationVisibility" java-key="androidx.core.app.NotificationCompat$NotificationVisibility" managed-key="AndroidX.Core.App.NotificationCompat.INotificationVisibility" partial-assembly-qualified-name="AndroidX.Core.App.NotificationCompat+INotificationVisibility, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.NotificationCompat+IServiceNotificationBehavior, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.NotificationCompat$ServiceNotificationBehavior" java-key="androidx.core.app.NotificationCompat$ServiceNotificationBehavior" managed-key="AndroidX.Core.App.NotificationCompat.IServiceNotificationBehavior" partial-assembly-qualified-name="AndroidX.Core.App.NotificationCompat+IServiceNotificationBehavior, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.NotificationCompat+IStreamType, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.NotificationCompat$StreamType" java-key="androidx.core.app.NotificationCompat$StreamType" managed-key="AndroidX.Core.App.NotificationCompat.IStreamType" partial-assembly-qualified-name="AndroidX.Core.App.NotificationCompat+IStreamType, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.NotificationManagerCompat+IInterruptionFilter, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.NotificationManagerCompat$InterruptionFilter" java-key="androidx.core.app.NotificationManagerCompat$InterruptionFilter" managed-key="AndroidX.Core.App.NotificationManagerCompat.IInterruptionFilter" partial-assembly-qualified-name="AndroidX.Core.App.NotificationManagerCompat+IInterruptionFilter, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.PendingIntentCompat+IFlags, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.PendingIntentCompat$Flags" java-key="androidx.core.app.PendingIntentCompat$Flags" managed-key="AndroidX.Core.App.PendingIntentCompat.IFlags" partial-assembly-qualified-name="AndroidX.Core.App.PendingIntentCompat+IFlags, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.RemoteInput+IEditChoicesBeforeSending, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.RemoteInput$EditChoicesBeforeSending" java-key="androidx.core.app.RemoteInput$EditChoicesBeforeSending" managed-key="AndroidX.Core.App.RemoteInput.IEditChoicesBeforeSending" partial-assembly-qualified-name="AndroidX.Core.App.RemoteInput+IEditChoicesBeforeSending, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.RemoteInput+ISource, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.RemoteInput$Source" java-key="androidx.core.app.RemoteInput$Source" managed-key="AndroidX.Core.App.RemoteInput.ISource" partial-assembly-qualified-name="AndroidX.Core.App.RemoteInput+ISource, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.ServiceCompat+IStopForegroundFlags, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.ServiceCompat$StopForegroundFlags" java-key="androidx.core.app.ServiceCompat$StopForegroundFlags" managed-key="AndroidX.Core.App.ServiceCompat.IStopForegroundFlags" partial-assembly-qualified-name="AndroidX.Core.App.ServiceCompat+IStopForegroundFlags, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.SharedElementCallback+IOnSharedElementsReadyListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener" java-key="androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener" managed-key="AndroidX.Core.App.SharedElementCallback.IOnSharedElementsReadyListener" partial-assembly-qualified-name="AndroidX.Core.App.SharedElementCallback+IOnSharedElementsReadyListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.SharedElementCallback+IOnSharedElementsReadyListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.app.SharedElementCallback_OnSharedElementsReadyListenerImplementor" java-key="mono.androidx.core.app.SharedElementCallback_OnSharedElementsReadyListenerImplementor" managed-key="AndroidX.Core.App.SharedElementCallback.IOnSharedElementsReadyListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.App.SharedElementCallback+IOnSharedElementsReadyListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.TaskStackBuilder+ISupportParentable, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.TaskStackBuilder$SupportParentable" java-key="androidx.core.app.TaskStackBuilder$SupportParentable" managed-key="AndroidX.Core.App.TaskStackBuilder.ISupportParentable" partial-assembly-qualified-name="AndroidX.Core.App.TaskStackBuilder+ISupportParentable, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.UnusedAppRestrictions.IUnusedAppRestrictionsBackportCallback, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback" java-key="androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback" managed-key="AndroidX.Core.App.UnusedAppRestrictions.IUnusedAppRestrictionsBackportCallback" partial-assembly-qualified-name="AndroidX.Core.App.UnusedAppRestrictions.IUnusedAppRestrictionsBackportCallback, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.App.UnusedAppRestrictions.IUnusedAppRestrictionsBackportService, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService" java-key="androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService" managed-key="AndroidX.Core.App.UnusedAppRestrictions.IUnusedAppRestrictionsBackportService" partial-assembly-qualified-name="AndroidX.Core.App.UnusedAppRestrictions.IUnusedAppRestrictionsBackportService, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Widget.NestedScrollView+IOnScrollChangeListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.widget.NestedScrollView$OnScrollChangeListener" java-key="androidx.core.widget.NestedScrollView$OnScrollChangeListener" managed-key="AndroidX.Core.Widget.NestedScrollView.IOnScrollChangeListener" partial-assembly-qualified-name="AndroidX.Core.Widget.NestedScrollView+IOnScrollChangeListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Widget.NestedScrollView+IOnScrollChangeListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor" java-key="mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor" managed-key="AndroidX.Core.Widget.NestedScrollView.IOnScrollChangeListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.Widget.NestedScrollView+IOnScrollChangeListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Widget.IAutoSizeableTextView, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.widget.AutoSizeableTextView" java-key="androidx.core.widget.AutoSizeableTextView" managed-key="AndroidX.Core.Widget.IAutoSizeableTextView" partial-assembly-qualified-name="AndroidX.Core.Widget.IAutoSizeableTextView, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Widget.ITintableCheckedTextView, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.widget.TintableCheckedTextView" java-key="androidx.core.widget.TintableCheckedTextView" managed-key="AndroidX.Core.Widget.ITintableCheckedTextView" partial-assembly-qualified-name="AndroidX.Core.Widget.ITintableCheckedTextView, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Widget.ITintableCompoundButton, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.widget.TintableCompoundButton" java-key="androidx.core.widget.TintableCompoundButton" managed-key="AndroidX.Core.Widget.ITintableCompoundButton" partial-assembly-qualified-name="AndroidX.Core.Widget.ITintableCompoundButton, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Widget.ITintableCompoundDrawablesView, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.widget.TintableCompoundDrawablesView" java-key="androidx.core.widget.TintableCompoundDrawablesView" managed-key="AndroidX.Core.Widget.ITintableCompoundDrawablesView" partial-assembly-qualified-name="AndroidX.Core.Widget.ITintableCompoundDrawablesView, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Widget.ITintableImageSourceView, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.widget.TintableImageSourceView" java-key="androidx.core.widget.TintableImageSourceView" managed-key="AndroidX.Core.Widget.ITintableImageSourceView" partial-assembly-qualified-name="AndroidX.Core.Widget.ITintableImageSourceView, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Widget.TextViewCompat+IAutoSizeTextType, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.widget.TextViewCompat$AutoSizeTextType" java-key="androidx.core.widget.TextViewCompat$AutoSizeTextType" managed-key="AndroidX.Core.Widget.TextViewCompat.IAutoSizeTextType" partial-assembly-qualified-name="AndroidX.Core.Widget.TextViewCompat+IAutoSizeTextType, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.INestedScrollingParent2, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.NestedScrollingParent2" java-key="androidx.core.view.NestedScrollingParent2" managed-key="AndroidX.Core.View.INestedScrollingParent2" partial-assembly-qualified-name="AndroidX.Core.View.INestedScrollingParent2, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ActionProvider+ISubUiVisibilityListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ActionProvider$SubUiVisibilityListener" java-key="androidx.core.view.ActionProvider$SubUiVisibilityListener" managed-key="AndroidX.Core.View.ActionProvider.ISubUiVisibilityListener" partial-assembly-qualified-name="AndroidX.Core.View.ActionProvider+ISubUiVisibilityListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ActionProvider+ISubUiVisibilityListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor" java-key="mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor" managed-key="AndroidX.Core.View.ActionProvider.ISubUiVisibilityListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.ActionProvider+ISubUiVisibilityListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ActionProvider+IVisibilityListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ActionProvider$VisibilityListener" java-key="androidx.core.view.ActionProvider$VisibilityListener" managed-key="AndroidX.Core.View.ActionProvider.IVisibilityListener" partial-assembly-qualified-name="AndroidX.Core.View.ActionProvider+IVisibilityListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ActionProvider+IVisibilityListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor" java-key="mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor" managed-key="AndroidX.Core.View.ActionProvider.IVisibilityListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.ActionProvider+IVisibilityListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ContentInfoCompat+IFlags, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ContentInfoCompat$Flags" java-key="androidx.core.view.ContentInfoCompat$Flags" managed-key="AndroidX.Core.View.ContentInfoCompat.IFlags" partial-assembly-qualified-name="AndroidX.Core.View.ContentInfoCompat+IFlags, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ContentInfoCompat+ISource, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ContentInfoCompat$Source" java-key="androidx.core.view.ContentInfoCompat$Source" managed-key="AndroidX.Core.View.ContentInfoCompat.ISource" partial-assembly-qualified-name="AndroidX.Core.View.ContentInfoCompat+ISource, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.DragStartHelper+IOnDragStartListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.DragStartHelper$OnDragStartListener" java-key="androidx.core.view.DragStartHelper$OnDragStartListener" managed-key="AndroidX.Core.View.DragStartHelper.IOnDragStartListener" partial-assembly-qualified-name="AndroidX.Core.View.DragStartHelper+IOnDragStartListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.DragStartHelper+IOnDragStartListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.DragStartHelper_OnDragStartListenerImplementor" java-key="mono.androidx.core.view.DragStartHelper_OnDragStartListenerImplementor" managed-key="AndroidX.Core.View.DragStartHelper.IOnDragStartListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.DragStartHelper+IOnDragStartListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.HapticFeedbackConstantsCompat+IHapticFeedbackFlags, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.HapticFeedbackConstantsCompat$HapticFeedbackFlags" java-key="androidx.core.view.HapticFeedbackConstantsCompat$HapticFeedbackFlags" managed-key="AndroidX.Core.View.HapticFeedbackConstantsCompat.IHapticFeedbackFlags" partial-assembly-qualified-name="AndroidX.Core.View.HapticFeedbackConstantsCompat+IHapticFeedbackFlags, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.HapticFeedbackConstantsCompat+IHapticFeedbackType, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.HapticFeedbackConstantsCompat$HapticFeedbackType" java-key="androidx.core.view.HapticFeedbackConstantsCompat$HapticFeedbackType" managed-key="AndroidX.Core.View.HapticFeedbackConstantsCompat.IHapticFeedbackType" partial-assembly-qualified-name="AndroidX.Core.View.HapticFeedbackConstantsCompat+IHapticFeedbackType, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IDifferentialMotionFlingTarget, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.DifferentialMotionFlingTarget" java-key="androidx.core.view.DifferentialMotionFlingTarget" managed-key="AndroidX.Core.View.IDifferentialMotionFlingTarget" partial-assembly-qualified-name="AndroidX.Core.View.IDifferentialMotionFlingTarget, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ILayoutInflaterFactory, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.LayoutInflaterFactory" java-key="androidx.core.view.LayoutInflaterFactory" managed-key="AndroidX.Core.View.ILayoutInflaterFactory" partial-assembly-qualified-name="AndroidX.Core.View.ILayoutInflaterFactory, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IMenuHost, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.MenuHost" java-key="androidx.core.view.MenuHost" managed-key="AndroidX.Core.View.IMenuHost" partial-assembly-qualified-name="AndroidX.Core.View.IMenuHost, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IMenuProvider, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.MenuProvider" java-key="androidx.core.view.MenuProvider" managed-key="AndroidX.Core.View.IMenuProvider" partial-assembly-qualified-name="AndroidX.Core.View.IMenuProvider, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.INestedScrollingChild, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.NestedScrollingChild" java-key="androidx.core.view.NestedScrollingChild" managed-key="AndroidX.Core.View.INestedScrollingChild" partial-assembly-qualified-name="AndroidX.Core.View.INestedScrollingChild, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.INestedScrollingChild2, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.NestedScrollingChild2" java-key="androidx.core.view.NestedScrollingChild2" managed-key="AndroidX.Core.View.INestedScrollingChild2" partial-assembly-qualified-name="AndroidX.Core.View.INestedScrollingChild2, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.INestedScrollingChild3, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.NestedScrollingChild3" java-key="androidx.core.view.NestedScrollingChild3" managed-key="AndroidX.Core.View.INestedScrollingChild3" partial-assembly-qualified-name="AndroidX.Core.View.INestedScrollingChild3, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.INestedScrollingParent, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.NestedScrollingParent" java-key="androidx.core.view.NestedScrollingParent" managed-key="AndroidX.Core.View.INestedScrollingParent" partial-assembly-qualified-name="AndroidX.Core.View.INestedScrollingParent, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.INestedScrollingParent3, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.NestedScrollingParent3" java-key="androidx.core.view.NestedScrollingParent3" managed-key="AndroidX.Core.View.INestedScrollingParent3" partial-assembly-qualified-name="AndroidX.Core.View.INestedScrollingParent3, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IOnApplyWindowInsetsListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.OnApplyWindowInsetsListener" java-key="androidx.core.view.OnApplyWindowInsetsListener" managed-key="AndroidX.Core.View.IOnApplyWindowInsetsListener" partial-assembly-qualified-name="AndroidX.Core.View.IOnApplyWindowInsetsListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IOnApplyWindowInsetsListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.OnApplyWindowInsetsListenerImplementor" java-key="mono.androidx.core.view.OnApplyWindowInsetsListenerImplementor" managed-key="AndroidX.Core.View.IOnApplyWindowInsetsListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.IOnApplyWindowInsetsListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IOnReceiveContentListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.OnReceiveContentListener" java-key="androidx.core.view.OnReceiveContentListener" managed-key="AndroidX.Core.View.IOnReceiveContentListener" partial-assembly-qualified-name="AndroidX.Core.View.IOnReceiveContentListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IOnReceiveContentListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.OnReceiveContentListenerImplementor" java-key="mono.androidx.core.view.OnReceiveContentListenerImplementor" managed-key="AndroidX.Core.View.IOnReceiveContentListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.IOnReceiveContentListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IOnReceiveContentViewBehavior, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.OnReceiveContentViewBehavior" java-key="androidx.core.view.OnReceiveContentViewBehavior" managed-key="AndroidX.Core.View.IOnReceiveContentViewBehavior" partial-assembly-qualified-name="AndroidX.Core.View.IOnReceiveContentViewBehavior, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IScrollingView, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ScrollingView" java-key="androidx.core.view.ScrollingView" managed-key="AndroidX.Core.View.IScrollingView" partial-assembly-qualified-name="AndroidX.Core.View.IScrollingView, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ITintableBackgroundView, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.TintableBackgroundView" java-key="androidx.core.view.TintableBackgroundView" managed-key="AndroidX.Core.View.ITintableBackgroundView" partial-assembly-qualified-name="AndroidX.Core.View.ITintableBackgroundView, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IViewPropertyAnimatorListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ViewPropertyAnimatorListener" java-key="androidx.core.view.ViewPropertyAnimatorListener" managed-key="AndroidX.Core.View.IViewPropertyAnimatorListener" partial-assembly-qualified-name="AndroidX.Core.View.IViewPropertyAnimatorListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IViewPropertyAnimatorListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.ViewPropertyAnimatorListenerImplementor" java-key="mono.androidx.core.view.ViewPropertyAnimatorListenerImplementor" managed-key="AndroidX.Core.View.IViewPropertyAnimatorListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.IViewPropertyAnimatorListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IViewPropertyAnimatorUpdateListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ViewPropertyAnimatorUpdateListener" java-key="androidx.core.view.ViewPropertyAnimatorUpdateListener" managed-key="AndroidX.Core.View.IViewPropertyAnimatorUpdateListener" partial-assembly-qualified-name="AndroidX.Core.View.IViewPropertyAnimatorUpdateListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IViewPropertyAnimatorUpdateListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.ViewPropertyAnimatorUpdateListenerImplementor" java-key="mono.androidx.core.view.ViewPropertyAnimatorUpdateListenerImplementor" managed-key="AndroidX.Core.View.IViewPropertyAnimatorUpdateListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.IViewPropertyAnimatorUpdateListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.IWindowInsetsAnimationControlListenerCompat, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.WindowInsetsAnimationControlListenerCompat" java-key="androidx.core.view.WindowInsetsAnimationControlListenerCompat" managed-key="AndroidX.Core.View.IWindowInsetsAnimationControlListenerCompat" partial-assembly-qualified-name="AndroidX.Core.View.IWindowInsetsAnimationControlListenerCompat, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.KeyEventDispatcher+IComponent, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.KeyEventDispatcher$Component" java-key="androidx.core.view.KeyEventDispatcher$Component" managed-key="AndroidX.Core.View.KeyEventDispatcher.IComponent" partial-assembly-qualified-name="AndroidX.Core.View.KeyEventDispatcher+IComponent, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.MenuItemCompat+IOnActionExpandListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.MenuItemCompat$OnActionExpandListener" java-key="androidx.core.view.MenuItemCompat$OnActionExpandListener" managed-key="AndroidX.Core.View.MenuItemCompat.IOnActionExpandListener" partial-assembly-qualified-name="AndroidX.Core.View.MenuItemCompat+IOnActionExpandListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.MenuItemCompat+IOnActionExpandListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.MenuItemCompat_OnActionExpandListenerImplementor" java-key="mono.androidx.core.view.MenuItemCompat_OnActionExpandListenerImplementor" managed-key="AndroidX.Core.View.MenuItemCompat.IOnActionExpandListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.MenuItemCompat+IOnActionExpandListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.VelocityTrackerCompat+IVelocityTrackableMotionEventAxis, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.VelocityTrackerCompat$VelocityTrackableMotionEventAxis" java-key="androidx.core.view.VelocityTrackerCompat$VelocityTrackableMotionEventAxis" managed-key="AndroidX.Core.View.VelocityTrackerCompat.IVelocityTrackableMotionEventAxis" partial-assembly-qualified-name="AndroidX.Core.View.VelocityTrackerCompat+IVelocityTrackableMotionEventAxis, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ViewCompat+IFocusDirection, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ViewCompat$FocusDirection" java-key="androidx.core.view.ViewCompat$FocusDirection" managed-key="AndroidX.Core.View.ViewCompat.IFocusDirection" partial-assembly-qualified-name="AndroidX.Core.View.ViewCompat+IFocusDirection, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ViewCompat+IFocusRealDirection, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ViewCompat$FocusRealDirection" java-key="androidx.core.view.ViewCompat$FocusRealDirection" managed-key="AndroidX.Core.View.ViewCompat.IFocusRealDirection" partial-assembly-qualified-name="AndroidX.Core.View.ViewCompat+IFocusRealDirection, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ViewCompat+IFocusRelativeDirection, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ViewCompat$FocusRelativeDirection" java-key="androidx.core.view.ViewCompat$FocusRelativeDirection" managed-key="AndroidX.Core.View.ViewCompat.IFocusRelativeDirection" partial-assembly-qualified-name="AndroidX.Core.View.ViewCompat+IFocusRelativeDirection, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ViewCompat+INestedScrollType, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ViewCompat$NestedScrollType" java-key="androidx.core.view.ViewCompat$NestedScrollType" managed-key="AndroidX.Core.View.ViewCompat.INestedScrollType" partial-assembly-qualified-name="AndroidX.Core.View.ViewCompat+INestedScrollType, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ViewCompat+IOnUnhandledKeyEventListenerCompat, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat" java-key="androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat" managed-key="AndroidX.Core.View.ViewCompat.IOnUnhandledKeyEventListenerCompat" partial-assembly-qualified-name="AndroidX.Core.View.ViewCompat+IOnUnhandledKeyEventListenerCompat, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ViewCompat+IScrollAxis, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ViewCompat$ScrollAxis" java-key="androidx.core.view.ViewCompat$ScrollAxis" managed-key="AndroidX.Core.View.ViewCompat.IScrollAxis" partial-assembly-qualified-name="AndroidX.Core.View.ViewCompat+IScrollAxis, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.ViewCompat+IScrollIndicators, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.ViewCompat$ScrollIndicators" java-key="androidx.core.view.ViewCompat$ScrollIndicators" managed-key="AndroidX.Core.View.ViewCompat.IScrollIndicators" partial-assembly-qualified-name="AndroidX.Core.View.ViewCompat+IScrollIndicators, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.WindowInsetsAnimationCompat+Callback+IDispatchMode, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.WindowInsetsAnimationCompat$Callback$DispatchMode" java-key="androidx.core.view.WindowInsetsAnimationCompat$Callback$DispatchMode" managed-key="AndroidX.Core.View.WindowInsetsAnimationCompat.Callback.IDispatchMode" partial-assembly-qualified-name="AndroidX.Core.View.WindowInsetsAnimationCompat+Callback+IDispatchMode, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.WindowInsetsCompat+Side+IInsetsSide, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.WindowInsetsCompat$Side$InsetsSide" java-key="androidx.core.view.WindowInsetsCompat$Side$InsetsSide" managed-key="AndroidX.Core.View.WindowInsetsCompat.Side.IInsetsSide" partial-assembly-qualified-name="AndroidX.Core.View.WindowInsetsCompat+Side+IInsetsSide, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.WindowInsetsCompat+Type+IInsetsType, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.WindowInsetsCompat$Type$InsetsType" java-key="androidx.core.view.WindowInsetsCompat$Type$InsetsType" managed-key="AndroidX.Core.View.WindowInsetsCompat.Type.IInsetsType" partial-assembly-qualified-name="AndroidX.Core.View.WindowInsetsCompat+Type+IInsetsType, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.WindowInsetsControllerCompat+IOnControllableInsetsChangedListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener" java-key="androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener" managed-key="AndroidX.Core.View.WindowInsetsControllerCompat.IOnControllableInsetsChangedListener" partial-assembly-qualified-name="AndroidX.Core.View.WindowInsetsControllerCompat+IOnControllableInsetsChangedListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.WindowInsetsControllerCompat+IOnControllableInsetsChangedListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor" java-key="mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor" managed-key="AndroidX.Core.View.WindowInsetsControllerCompat.IOnControllableInsetsChangedListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.WindowInsetsControllerCompat+IOnControllableInsetsChangedListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.InputMethod.InputConnectionCompat+IOnCommitContentListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener" java-key="androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener" managed-key="AndroidX.Core.View.InputMethod.InputConnectionCompat.IOnCommitContentListener" partial-assembly-qualified-name="AndroidX.Core.View.InputMethod.InputConnectionCompat+IOnCommitContentListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.InputMethod.InputConnectionCompat+IOnCommitContentListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.inputmethod.InputConnectionCompat_OnCommitContentListenerImplementor" java-key="mono.androidx.core.view.inputmethod.InputConnectionCompat_OnCommitContentListenerImplementor" managed-key="AndroidX.Core.View.InputMethod.InputConnectionCompat.IOnCommitContentListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.InputMethod.InputConnectionCompat+IOnCommitContentListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.Accessibility.AccessibilityEventCompat+IContentChangeType, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.accessibility.AccessibilityEventCompat$ContentChangeType" java-key="androidx.core.view.accessibility.AccessibilityEventCompat$ContentChangeType" managed-key="AndroidX.Core.View.Accessibility.AccessibilityEventCompat.IContentChangeType" partial-assembly-qualified-name="AndroidX.Core.View.Accessibility.AccessibilityEventCompat+IContentChangeType, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.Accessibility.AccessibilityManagerCompat+IAccessibilityStateChangeListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener" java-key="androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener" managed-key="AndroidX.Core.View.Accessibility.AccessibilityManagerCompat.IAccessibilityStateChangeListener" partial-assembly-qualified-name="AndroidX.Core.View.Accessibility.AccessibilityManagerCompat+IAccessibilityStateChangeListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.Accessibility.AccessibilityManagerCompat+IAccessibilityStateChangeListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.accessibility.AccessibilityManagerCompat_AccessibilityStateChangeListenerImplementor" java-key="mono.androidx.core.view.accessibility.AccessibilityManagerCompat_AccessibilityStateChangeListenerImplementor" managed-key="AndroidX.Core.View.Accessibility.AccessibilityManagerCompat.IAccessibilityStateChangeListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.Accessibility.AccessibilityManagerCompat+IAccessibilityStateChangeListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.Accessibility.AccessibilityManagerCompat+ITouchExplorationStateChangeListener, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener" java-key="androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener" managed-key="AndroidX.Core.View.Accessibility.AccessibilityManagerCompat.ITouchExplorationStateChangeListener" partial-assembly-qualified-name="AndroidX.Core.View.Accessibility.AccessibilityManagerCompat+ITouchExplorationStateChangeListener, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.Accessibility.AccessibilityManagerCompat+ITouchExplorationStateChangeListenerImplementor, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="mono.androidx.core.view.accessibility.AccessibilityManagerCompat_TouchExplorationStateChangeListenerImplementor" java-key="mono.androidx.core.view.accessibility.AccessibilityManagerCompat_TouchExplorationStateChangeListenerImplementor" managed-key="AndroidX.Core.View.Accessibility.AccessibilityManagerCompat.ITouchExplorationStateChangeListenerImplementor" partial-assembly-qualified-name="AndroidX.Core.View.Accessibility.AccessibilityManagerCompat+ITouchExplorationStateChangeListenerImplementor, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.View.Accessibility.IAccessibilityViewCommand, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.view.accessibility.AccessibilityViewCommand" java-key="androidx.core.view.accessibility.AccessibilityViewCommand" managed-key="AndroidX.Core.View.Accessibility.IAccessibilityViewCommand" partial-assembly-qualified-name="AndroidX.Core.View.Accessibility.IAccessibilityViewCommand, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Text.ITextDirectionHeuristicCompat, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.text.TextDirectionHeuristicCompat" java-key="androidx.core.text.TextDirectionHeuristicCompat" managed-key="AndroidX.Core.Text.ITextDirectionHeuristicCompat" partial-assembly-qualified-name="AndroidX.Core.Text.ITextDirectionHeuristicCompat, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Text.Util.LinkifyCompat+ILinkifyMask, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.text.util.LinkifyCompat$LinkifyMask" java-key="androidx.core.text.util.LinkifyCompat$LinkifyMask" managed-key="AndroidX.Core.Text.Util.LinkifyCompat.ILinkifyMask" partial-assembly-qualified-name="AndroidX.Core.Text.Util.LinkifyCompat+ILinkifyMask, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Text.Util.LocalePreferences+CalendarType+ICalendarTypes, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.text.util.LocalePreferences$CalendarType$CalendarTypes" java-key="androidx.core.text.util.LocalePreferences$CalendarType$CalendarTypes" managed-key="AndroidX.Core.Text.Util.LocalePreferences.CalendarType.ICalendarTypes" partial-assembly-qualified-name="AndroidX.Core.Text.Util.LocalePreferences+CalendarType+ICalendarTypes, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Text.Util.LocalePreferences+FirstDayOfWeek+IDays, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.text.util.LocalePreferences$FirstDayOfWeek$Days" java-key="androidx.core.text.util.LocalePreferences$FirstDayOfWeek$Days" managed-key="AndroidX.Core.Text.Util.LocalePreferences.FirstDayOfWeek.IDays" partial-assembly-qualified-name="AndroidX.Core.Text.Util.LocalePreferences+FirstDayOfWeek+IDays, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Text.Util.LocalePreferences+HourCycle+IHourCycleTypes, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.text.util.LocalePreferences$HourCycle$HourCycleTypes" java-key="androidx.core.text.util.LocalePreferences$HourCycle$HourCycleTypes" managed-key="AndroidX.Core.Text.Util.LocalePreferences.HourCycle.IHourCycleTypes" partial-assembly-qualified-name="AndroidX.Core.Text.Util.LocalePreferences+HourCycle+IHourCycleTypes, Xamarin.AndroidX.Core" />
    <type assembly-qualified-name="AndroidX.Core.Text.Util.LocalePreferences+TemperatureUnit+ITemperatureUnits, Xamarin.AndroidX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" compat-jni-name="androidx.core.text.util.LocalePreferences$TemperatureUnit$TemperatureUnits" java-key="androidx.core.text.util.LocalePreferences$TemperatureUnit$TemperatureUnits" managed-key="AndroidX.Core.Text.Util.LocalePreferences.TemperatureUnit.ITemperatureUnits" partial-assembly-qualified-name="AndroidX.Core.Text.Util.LocalePreferences+TemperatureUnit+ITemperatureUnits, Xamarin.AndroidX.Core" />
  </acw-types>
</api>